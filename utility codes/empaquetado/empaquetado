# havers_bone_analyzer.spec
# PyInstaller specification file for Phygital Bone Analyzer

import os
from PyInstaller.building.build_main import Analysis, PYZ, EXE, COLLECT

# Ruta al modelo YOLO (ajusta según tu configuración)
YOLO_MODEL_PATH = r"C:\Users\joanb\OneDrive\Escritorio\TFG\workspace\runs\detect\train\weights\best.pt"

# Ruta al script principal
MAIN_SCRIPT = r"havers_channels_app.py"

# Definir análisis de dependencias
a = Analysis(
    [MAIN_SCRIPT],
    pathex=[],
    binaries=[],
    datas=[
        # Añadir modelo YOLO
        (YOLO_MODEL_PATH, '.'),
        
        # Opcional: añadir ícono personalizado
        # (r'path\to\icon.ico', '.'),
    ],
    # Ignorar ciertos módulos para reducir tamaño
    excludes=[
        'tkinter', 
        'matplotlib.tests',
        'numpy.tests',
        'pytest',
        'setuptools',
        'pip',
        'wheel'
    ],
    # Compatibilidad con PyTorch y otros módulos
    hookspath=[],
    runtime_hooks=[],
    
    # Usar todas las CPU disponibles para compilación
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    noarchive=False,
)

# Configuración de compresión y análisis
pyz = PYZ(a.pure, a.zipped_data)

# Configuración de ejecutable
exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='PhygitalBoneAnalyzer',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,  # Comprimir binarios
    console=False,  # Sin consola en Windows
    icon=None  # Opcional: path a un .ico
)

# Recolectar binarios y dependencias
coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='PhygitalBoneAnalyzer'
)